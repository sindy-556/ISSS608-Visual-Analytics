{
  "hash": "a6521be0bcf3b101477c32e50cdd416a",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In-class Exercise 7: Visualising, Analysing and Forecasting Time-series Data: tidyverts methods\"\nauthor: \"Sindy\"\ndate: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n## 1. Getting Started\n\n### 1.1 Load Required R Packages\n\nFor the purpose of this in-class exercise, the following R packages will be used.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, tsibble, feasts, fable, seasonal)\n```\n:::\n\n\n\n### 1.2 Importing the data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data <- read_csv(\n  \"data/visitor_arrivals_by_air.csv\")\n```\n:::\n\n\n\nIn the code chunk below, dmy() of lubridate package is used to convert data type of Month-Year field from Character to Date.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data$`Month-Year` <- dmy(\n  ts_data$`Month-Year`)\n```\n:::\n\n\n\n> Tip: make sure the format is correct (chr vs Date fields)\n\n19.2.3 Conventional base ts object versus tibble object\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_data_ts <- ts(ts_data)       \nhead(ts_data_ts)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     Month-Year Republic of South Africa Canada   USA Bangladesh Brunei China\n[1,]      13879                     3680   6972 31155       6786   3729 79599\n[2,]      13910                     1662   6056 27738       6314   3070 82074\n[3,]      13939                     3394   6220 31349       7502   4805 72546\n[4,]      13970                     3337   4764 26376       7333   3096 76112\n[5,]      14000                     2089   4460 26788       7988   3586 64808\n[6,]      14031                     2515   3888 29725       8301   5284 55238\n     Hong Kong SAR (China) India Indonesia Japan South Korea Kuwait Malaysia\n[1,]                 17103 41639     62683 37673       27937    284    31352\n[2,]                 21089 37170     47834 35297       22633    241    35030\n[3,]                 23230 44815     64688 42575       22876    206    37629\n[4,]                 17688 49527     58074 26839       20634    193    37521\n[5,]                 19340 67754     57089 30814       22785    140    38044\n[6,]                 19152 57380     70118 31001       22575    354    40419\n     Myanmar Pakistan Philippines Saudi Arabia Sri Lanka Taiwan Thailand\n[1,]    5269     1395       18622          406      5289  13757    18370\n[2,]    4643     1027       21609          591      4767  13921    16400\n[3,]    6218     1635       28464          626      4988  11181    23387\n[4,]    7324     1232       30131          644      7639  11665    24469\n[5,]    5395     1306       30193          470      5125  11436    21935\n[6,]    5542     1996       25800          772      4791  10689    19900\n     United Arab Emirates Vietnam Belgium & Luxembourg Finland France Germany\n[1,]                 2652   10315                 1341    1179   6918   11982\n[2,]                 2230   13415                 1449    1207   7876   13256\n[3,]                 3353   14320                 1674    1071   8066   15185\n[4,]                 3245   15413                 1426     768   8312   11604\n[5,]                 2856   14424                 1243     690   7066    9853\n[6,]                 4292   21368                 1255     624   5926    9347\n     Italy Netherlands Spain Switzerland United Kingdom Australia New Zealand\n[1,]  2953        4938  1668        4450          41934     71260        7806\n[2,]  2704        4885  1568        4381          44029     45595        4729\n[3,]  2822        5015  2254        5015          49489     53191        6106\n[4,]  3018        4902  1503        5434          35771     56514        7560\n[5,]  2165        4397  1365        4427          24464     57808        9090\n[6,]  2022        4166  1446        3359          22473     63350        9681\n```\n\n\n:::\n:::\n\n\nDifferent dataframes... (explanation here)\nnot a typical tibble dataframe\n> class(ts_data_ts)\n[1] \"mts\"    \"ts\"     \"matrix\" \"array\" \n> class(ts_data)\n[1] \"spec_tbl_df\" \"tbl_df\"      \"tbl\"         \"data.frame\"\n\nUse ts_data for data prep and conversion\nthen convert to ts_data_ts for a timeseries object?\n\n\n\nsome explanation here!\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_tsibble <- ts_data %>%\n  mutate(Month = yearmonth(`Month-Year`)) %>%\n  as_tsibble(index = `Month`)\n```\n:::\n\n\n\n> class(ts_tsibble)\n[1] \"tbl_ts\"     \"tbl_df\"     \"tbl\"        \"data.frame\"\n\nsth that can be used by dpylr and tidyr and also timeseries time series manner?\n\n\n\nvisual time series.,,,\n\ntransform the series for you to work with first\ncause cannot see the header (numbers correspond to which country) - so transform to a long table. Prepare data by reordering data differently.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_longer <- ts_data %>%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n```\n:::\n\n\n\n\nVisualising single time-series: ggplot2 methods\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nts_longer %>%\n  filter(Country == \"Vietnam\") %>%\n  ggplot(aes(x = `Month-Year`, \n             y = Arrivals))+\n  geom_line(size = 0.5)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07-draft_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n### plot multiple countries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ts_longer, \n       aes(x = `Month-Year`, \n           y = Arrivals,\n           color = Country))+\n  geom_line(size = 0.5) +\n  theme(legend.position = \"bottom\", \n        legend.box.spacing = unit(0.5, \"cm\"))\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07-draft_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n\nor use facet\nyou can define no of col --> rows will be automatically calculated...\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = ts_longer, \n       aes(x = `Month-Year`, \n           y = Arrivals))+\n  geom_line(size = 0.5) +\n  facet_wrap(~ Country,\n             ncol = 3,\n             scales = \"free_y\") +\n  theme_bw()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07-draft_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\nNOTE!!! intervals are not constant!!\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer <- ts_tsibble %>%\n  pivot_longer(cols = c(2:34),\n               names_to = \"Country\",\n               values_to = \"Arrivals\")\n```\n:::\n\n\n\nUseful to start with\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %>% \n  autoplot(Arrivals) + \n  facet_grid(Country ~ ., scales = \"free_y\")\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07-draft_files/figure-html/unnamed-chunk-11-1.png){width=672}\n:::\n:::\n\n\n\n\nshows you the distribution.\ne.g. Italians only come in at a big crowd in the month of Aug. Rest of the year hover around 5000.\n\nVietnams, higher in Jun and Jul months. Peak in jul. Sept to Dec relatively constant, Jan to May, gradual increase. Jun higher jump. Arrival count peak at jul\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(Country == \"Vietnam\" |\n         Country == \"Italy\") %>% \n  gg_subseries(Arrivals)\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07-draft_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n:::\n\n\n\n\n\n### ACF plots\nhow the time series correlated.\nonly one variable - which is your time series variable\n\nauto correlation plots\ncreate 2 time lags...\nfind the correlation between them\n- then you have multiple variables.\n- get the second variable by shifting lag=1\nnote the graph below starts from lag=1 (t vs t-1)\n\n\nChina - 6 mths period.\nItaly - 12 peak. weak correlation at 1st mth ~0.3\nNote!!! 95% confidence level - should go above the blue line.\nChina case, vietnam case, most/all the lags is statistically significant.\nChina and vietnam, correlation decreases then increases again. The period different. Vietnam - 12 mths. China - 6 mths period\nUK lag t-1 significant... the rest of the year not sigificant, then 12 mths significant again\n- which means trend is not significant at all\n- drop down very fast\n- seasonal not important. (for UK and Italy)\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntsibble_longer %>%\n  filter(`Country` == \"Vietnam\" |\n         `Country` == \"Italy\" |\n         `Country` == \"United Kingdom\" |\n         `Country` == \"China\") %>%\n  ACF(Arrivals) %>%\n  autoplot()\n```\n\n::: {.cell-output-display}\n![](In-class_Ex07-draft_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In-class_Ex07-draft_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}